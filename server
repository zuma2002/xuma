// server.js (or app.js)

const express = require('express');
const expressLayouts = require('express-ejs-layouts');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// 1. Setup EJS as the templating engine
app.set('view engine', 'ejs');
// Point to the 'views' directory
app.set('views', path.join(__dirname, 'views'));

// 2. Setup EJS Layouts Middleware
// This enables the master layout feature (layout.ejs)
app.use(expressLayouts);
// Specify the default layout file to use for all views
app.set('layout', 'layout'); 

// 3. Serve Static Files
// This makes the 'public' folder accessible at the root level (e.g., /images/logo.png.png)
app.use(express.static(path.join(__dirname, 'public')));
// You can also expose specific folders for better organization if needed
// app.use('/css', express.static(path.join(__dirname, 'public/css')));
// app.use('/js', express.static(path.join(__dirname, 'public/js')));


// 4. Define Routes
// The main route for the home page
app.get('/', (req, res) => {
    // Renders 'views/index.ejs' using 'views/layout.ejs'
    // The 'pageTitle' variable is passed to be used in _head.ejs
    res.render('index', { 
        pageTitle: 'Home' 
    });
});

// Example of a secondary route (if you create views/contact.ejs later)
app.get('/contact-us', (req, res) => {
    res.render('contact', {
        pageTitle: 'Contact Us'
    });
});


// 5. Start the Server
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
    console.log(`Press CTRL + C to stop the server`);
});
